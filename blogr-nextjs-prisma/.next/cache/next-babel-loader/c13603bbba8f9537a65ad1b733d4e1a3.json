{"ast":null,"code":"import { getSession } from 'next-auth/client';\nimport prisma from '../../../lib/prisma'; // POST /api/post\n// Required fields in body: title\n// Optional fields in body: content\n\nexport default async function handle(req, res) {\n  const {\n    title,\n    content\n  } = req.body;\n  console.log(`body: ${JSON.stringify(req.body)}`);\n  const session = await getSession(req);\n  const result = await prisma.post.create({\n    data: {\n      title: title,\n      content: content,\n      author: {\n        connect: {\n          email: session === null || session === void 0 ? void 0 : session.user.email\n        }\n      }\n    }\n  });\n  res.json(result);\n}","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/practice/nextjs-postgres-prisma/blogr-nextjs-prisma/pages/api/post/index.ts"],"names":["getSession","prisma","handle","req","res","title","content","body","console","log","JSON","stringify","session","result","post","create","data","author","connect","email","user","json"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;;AACA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBH,GAAG,CAACI,IAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAQC,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACI,IAAnB,CAAyB,EAA9C;AAEA,QAAMK,OAAO,GAAG,MAAMZ,UAAU,CAACG,GAAD,CAAhC;AACA,QAAMU,MAAM,GAAG,MAAMZ,MAAM,CAACa,IAAP,CAAYC,MAAZ,CAAmB;AACtCC,IAAAA,IAAI,EAAE;AACJX,MAAAA,KAAK,EAAEA,KADH;AAEJC,MAAAA,OAAO,EAAEA,OAFL;AAGJW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEP,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEQ,IAAT,CAAcD;AAAvB;AAAX;AAHJ;AADgC,GAAnB,CAArB;AAQAf,EAAAA,GAAG,CAACiB,IAAJ,CAASR,MAAT;AACD","sourcesContent":["import { getSession } from 'next-auth/client'\nimport prisma from '../../../lib/prisma'\n\n// POST /api/post\n// Required fields in body: title\n// Optional fields in body: content\nexport default async function handle(req, res) {\n  const { title, content } = req.body\n\n  console.log(`body: ${JSON.stringify(req.body)}`)\n\n  const session = await getSession(req)\n  const result = await prisma.post.create({\n    data: {\n      title: title,\n      content: content,\n      author: { connect: { email: session?.user.email } }\n    }\n  })\n\n  res.json(result)\n}\n"]},"metadata":{},"sourceType":"module"}