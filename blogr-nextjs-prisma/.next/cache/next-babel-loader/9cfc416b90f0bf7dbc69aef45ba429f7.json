{"ast":null,"code":"var _jsxFileName = \"/Users/rjshoemaker/Documents/code/practice/nextjs-postgres-prisma/blogr-nextjs-prisma/pages/p/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\nimport prisma from '../../lib/prisma';\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const post = await prisma.post.findUnique({\n    where: {\n      id: Number(params === null || params === void 0 ? void 0 : params.id) || -1\n    },\n    include: {\n      author: {\n        select: {\n          name: true\n        }\n      }\n    }\n  });\n  return {\n    props: post\n  };\n};\n\nconst Post = props => {\n  var _props$author;\n\n  let title = props.title;\n\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"p\", {\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"By \", (props === null || props === void 0 ? void 0 : (_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.name) || 'Unknown author'), __jsx(ReactMarkdown, {\n    source: props.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"3440979688\",\n    __self: this\n  }, \".page.jsx-3440979688{background:white;padding:2rem;}.actions.jsx-3440979688{margin-top:2rem;}button.jsx-3440979688{background:#ececec;border:0;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-3440979688+button.jsx-3440979688{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yanNob2VtYWtlci9Eb2N1bWVudHMvY29kZS9wcmFjdGljZS9uZXh0anMtcG9zdGdyZXMtcHJpc21hL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvcC9baWRdLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQ2tCLEFBRzRCLEFBS0QsQUFJRyxBQU9GLGdCQVZuQixDQUxlLEFBZ0JmLEVBUFcsU0FDYyxFQVR6QixxQkFVb0Isa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9yanNob2VtYWtlci9Eb2N1bWVudHMvY29kZS9wcmFjdGljZS9uZXh0anMtcG9zdGdyZXMtcHJpc21hL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvcC9baWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEdldFNlcnZlclNpZGVQcm9wcyB9IGZyb20gJ25leHQnXG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bidcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9MYXlvdXQnXG5pbXBvcnQgeyBQb3N0UHJvcHMgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1Bvc3QnXG5pbXBvcnQgcHJpc21hIGZyb20gJy4uLy4uL2xpYi9wcmlzbWEnXG5cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHM6IEdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHBhcmFtcyB9KSA9PiB7XG4gIGNvbnN0IHBvc3QgPSBhd2FpdCBwcmlzbWEucG9zdC5maW5kVW5pcXVlKHtcbiAgICB3aGVyZTogeyBpZDogTnVtYmVyKHBhcmFtcz8uaWQpIHx8IC0xIH0sXG4gICAgaW5jbHVkZToge1xuICAgICAgYXV0aG9yOiB7XG4gICAgICAgIHNlbGVjdDogeyBuYW1lOiB0cnVlIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHBvc3RcbiAgfVxufVxuXG5jb25zdCBQb3N0OiBSZWFjdC5GQzxQb3N0UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGxldCB0aXRsZSA9IHByb3BzLnRpdGxlXG4gIGlmICghcHJvcHMucHVibGlzaGVkKSB7XG4gICAgdGl0bGUgPSBgJHt0aXRsZX0gKERyYWZ0KWBcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMj57dGl0bGV9PC9oMj5cbiAgICAgICAgPHA+Qnkge3Byb3BzPy5hdXRob3I/Lm5hbWUgfHwgJ1Vua25vd24gYXV0aG9yJ308L3A+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cHJvcHMuY29udGVudH0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucGFnZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hY3Rpb25zIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWNlY2VjO1xuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjEyNXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24gKyBidXR0b24ge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9zdFxuIl19 */\\n/*@ sourceURL=/Users/rjshoemaker/Documents/code/practice/nextjs-postgres-prisma/blogr-nextjs-prisma/pages/p/[id].tsx */\"));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/practice/nextjs-postgres-prisma/blogr-nextjs-prisma/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","prisma","getServerSideProps","params","post","findUnique","where","id","Number","include","author","select","name","props","Post","title","published","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMC,IAAI,GAAG,MAAMH,MAAM,CAACG,IAAP,CAAYC,UAAZ,CAAuB;AACxCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEC,MAAM,CAACL,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,EAAT,CAAN,IAAsB,CAAC;AAA7B,KADiC;AAExCE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADF;AADD;AAF+B,GAAvB,CAAnB;AAQA,SAAO;AACLC,IAAAA,KAAK,EAAET;AADF,GAAP;AAGD,CAZM;;AAcP,MAAMU,IAAyB,GAAID,KAAD,IAAW;AAAA;;AAC3C,MAAIE,KAAK,GAAGF,KAAK,CAACE,KAAlB;;AACA,MAAI,CAACF,KAAK,CAACG,SAAX,EAAsB;AACpBD,IAAAA,KAAK,GAAI,GAAEA,KAAM,UAAjB;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEH,MAAP,gEAAeE,IAAf,KAAuB,gBAA9B,CAFF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,KAAK,CAACI,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAAA;AAAA;AAAA,spFADF;AA8BD,CApCD;;AAsCA,eAAeH,IAAf","sourcesContent":["import React from 'react'\nimport { GetServerSideProps } from 'next'\nimport ReactMarkdown from 'react-markdown'\nimport Layout from '../../components/Layout'\nimport { PostProps } from '../../components/Post'\nimport prisma from '../../lib/prisma'\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const post = await prisma.post.findUnique({\n    where: { id: Number(params?.id) || -1 },\n    include: {\n      author: {\n        select: { name: true }\n      }\n    }\n  })\n  return {\n    props: post\n  }\n}\n\nconst Post: React.FC<PostProps> = (props) => {\n  let title = props.title\n  if (!props.published) {\n    title = `${title} (Draft)`\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>By {props?.author?.name || 'Unknown author'}</p>\n        <ReactMarkdown source={props.content} />\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #ececec;\n          border: 0;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}